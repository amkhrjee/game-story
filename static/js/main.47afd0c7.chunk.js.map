{"version":3,"sources":["assets/down-arrow.svg","assets/undraw_profile_pic_ic5t.svg","assets/layout.svg","assets/symbol.svg","assets/brands-and-logotypes.svg","assets/upvote.svg","assets/reply.svg","layout/Footer.js","context/userContext.js","layout/Header.js","utils/config.js","pages/SignUp.js","pages/SignIn.js","context/gameContext.js","components/GameCard.js","context/action.types.js","pages/Home.js","pages/pnF.js","pages/gameInfo.js","pages/dashboard.js","context/reducer.js","App.js","config/firebaseConfig.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","className","target","href","UserContext","createContext","NavBar","context","useContext","tag","Link","to","user","onClick","setUser","src","image","email","type","downArrow","alt","imageConfig","quality","maxWidth","maxHeight","autoRotate","debug","SignUp","state","dispatch","useState","setEmail","password","setPassword","setIsUploading","imageUrl","setImageUrl","imagePicker","e","a","file","files","metaData","contentType","readAndCompressImage","resizedImage","firebase","storage","ref","storageRef","uploadTask","child","v4","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","console","log","RUNNING","alert","error","getDownloadURL","then","catch","err","uid","htmlFor","id","name","multiple","onChange","accept","Form","onSubmit","preventDefault","auth","createUserWithEmailAndPassword","res","FormGroup","Label","for","Input","value","placeholder","Button","SignIn","signInWithEmailAndPassword","GameContext","GameCardComp","game","gameKey","history","useHistory","viewSingleGame","payload","key","push","poster","title","Home","games","Container","length","DownArrow","Object","entries","map","pnF","class","data-text","GameInfo","comment","setComment","upvote","addComment","database","set","videoID","frameborder","allow","allowfullscreen","available","developer","release","genre","storyline","dashboard","gameToUpdate","gameToUpdateKey","setTitle","setAvailable","setRelease","setGenre","setDeveloper","setStoryline","setVideoID","discussions","downloadUrl","setDownloadUrl","setIsUpdate","useEffect","downloadURL","addGame","row","sm","Col","action","isLoading","initialState","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useReducer","reducer","getGames","val","Provider","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.47afd0c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/down-arrow.c3fc7584.svg\";","module.exports = __webpack_public_path__ + \"static/media/undraw_profile_pic_ic5t.6a3966fb.svg\";","module.exports = __webpack_public_path__ + \"static/media/layout.695956b0.svg\";","module.exports = __webpack_public_path__ + \"static/media/symbol.e02c1a30.svg\";","module.exports = __webpack_public_path__ + \"static/media/brands-and-logotypes.cdb413ff.svg\";","module.exports = __webpack_public_path__ + \"static/media/upvote.17523c1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/reply.6016781c.svg\";","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../App.css';\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n\r\n    \r\n\r\n    return(\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n            <div className=\"list-container\">\r\n                <div className=\"list\">\r\n                    <ul className=\"footer-list\">\r\n                        <li className=\"footer-head\">Explore</li>\r\n                        <li className=\"footer-item\">Horror</li>\r\n                        <li className=\"footer-item\">Aliens</li>\r\n                        <li className=\"footer-item\">Space</li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"list\">\r\n                <ul className=\"footer-list\">\r\n                        <li className=\"footer-head\">Connect</li>\r\n                        <a className=\"anchor\" target=\"_blank\" href=\"mailto:aniruddha.xccentric@gmail.com\"><li className=\"footer-item\">Mail</li></a>\r\n                        <a className=\"anchor\" target=\"_blank\" href=\"https://twitter.com/CoderMukherjee\"><li className=\"footer-item\">Twitter</li></a>\r\n                        <a className=\"anchor\" target=\"_blank\" href=\"https://www.instagram.com/aniruddh.mukherji/\"><li className=\"footer-item\">Instagram</li></a>\r\n                    </ul>\r\n                </div>\r\n                 <div className=\"list\">\r\n                 <ul className=\"footer-list\">\r\n                        <li className=\"footer-head\">Donate</li>\r\n                        <li className=\"footer-item\">UPI</li>\r\n                        <li className=\"footer-item\">PayPal</li>\r\n                        <li className=\"footer-item\">Credit Card</li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import {createContext} from 'react';\r\n\r\nexport const UserContext = createContext();","import React, { useContext} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport downArrow from '../assets/down-arrow.svg'\r\nimport { UserContext } from '../context/userContext';\r\nimport { Link, NavLink } from 'react-router-dom';\r\n\r\nimport firebase from 'firebase/app';\r\nimport temp_profile from '../assets/undraw_profile_pic_ic5t.svg'\r\nimport toggle from '../assets/layout.svg'\r\n\r\n\r\nconst NavBar = () => {\r\n    const context = useContext(UserContext);\r\n\r\n    \r\n    return(\r\n        <div className=\"navbar\">\r\n            <div className=\"logo\">\r\n               <NavLink className=\"text-white\" tag={Link} to=\"/game-story\">gamestory.com</NavLink> \r\n            </div>\r\n\r\n            <div className=\"userReg\">\r\n                {\r\n                    context.user? (\r\n                        \r\n                        <div className=\"so-profile\">\r\n                            {/* <div className=\"btn-container\">\r\n                                <div className=\"toggle-btn\">\r\n                                    <img className=\"toggle-icon\" src={toggle} />\r\n                                </div>\r\n                                <div className=\"toggle-menu\">\r\n                                    <div className=\"profile-name\">\r\n                                        <img className=\"user-image\" src={context.user?.image} />\r\n                                        <p>{ context.user?.email ? context.user.email : '' }</p>\r\n                                    </div>\r\n                                    <div>\r\n                                        <NavLink tag={Link} to=\"/game-story/dashboard\" className=\"down-item\">Dashboard</NavLink>\r\n                                    </div>\r\n                                    <div className=\"sign-out\">\r\n                                        <NavLink onClick={() => {context.setUser(null)}} to=\"/game-story\">Sign Out</NavLink>\r\n                                    </div>\r\n                                    \r\n                                </div>\r\n                            </div> */}\r\n                                <div className=\"user-dashboard\">\r\n                                        <NavLink tag={Link} to=\"/game-story/dashboard\" className=\"down-item\">Dashboard</NavLink>\r\n                                    </div>\r\n\r\n\r\n                        \r\n                        <div className=\"so\">\r\n                            <NavLink onClick={() => {context.setUser(null)}} to=\"/game-story\">Sign Out</NavLink>\r\n                        </div>\r\n                         <div className=\"navigation\">\r\n                         <div className='nav-container'>\r\n                             <div className='row pr-5'>\r\n                                 <div className=\"col-sm pr-0\">\r\n                                     <div >\r\n                                         <img className=\"profile-image\" src={context.user?.image} />\r\n                                     </div>  \r\n                                 </div>\r\n                                 <div className=\"col-sm pl-1 pr-1\">\r\n                                     <div className=\"user-name\">\r\n                                         <p>{ context.user?.email ? context.user.email : '' }</p>\r\n                                     </div>\r\n                                 </div>\r\n                                 <div className=\"col-sm pl-0 down\">\r\n                                     <img className=\"down-arrow\" \r\n                                     type=\"button\"\r\n                                     src={downArrow} alt=''/>\r\n                                     \r\n                                     <div className=\"row down-content\">\r\n                                         <div className=\"dummy mt-0 mb-0\">\r\n                                             <NavLink tag={Link} to=\"/game-story/dashboard\" className=\"down-item\">Dashboard</NavLink>\r\n                                         </div>\r\n                                         {/* <div className=\"dummy mt-0 mb-0\">\r\n                                             <p className=\"down-item\">Profile</p>\r\n                                         </div> */}\r\n                                         {/* <div className=\"dummy mt-0 mb-0 pd-0\">\r\n                                             <p className=\"down-item\">Donate</p>\r\n                                         </div> */}\r\n                                 </div>\r\n                                 </div>\r\n                             </div>\r\n                         </div>\r\n                     </div>\r\n                        </div>\r\n                    ) \r\n                    : (\r\n                        <>\r\n                            <div  className=\"su\">\r\n                                <NavLink tag={Link} to=\"/game-story/signup\">Sign Up</NavLink>\r\n                            </div>\r\n                            <div  className=\"si\">\r\n                                <NavLink tag={Link} to=\"/game-story/signin\">Sign In</NavLink>\r\n                            </div>\r\n                           \r\n                        </>\r\n                    )\r\n                }\r\n                \r\n                \r\n            </div>\r\n          \r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","export const imageConfig = {\r\n    quality: 0.5,\r\n    maxWidth: 800,\r\n    maxHeight: 600,\r\n    autoRotate: true,\r\n    debug: true\r\n  };\r\n\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport NavBar from '../layout/Header';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport '../App.css'\r\nimport Footer from '../layout/Footer';\r\n\r\nimport firebase from 'firebase/app';\r\nimport { UserContext } from '../context/userContext';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { readAndCompressImage } from 'browser-image-resizer';\r\nimport { imageConfig } from '../utils/config';\r\nimport { v4 } from 'uuid';\r\n\r\nimport GImage from '../assets/symbol.svg';\r\nimport fbImage from '../assets/brands-and-logotypes.svg';\r\nconst SignUp = () => {\r\n\r\n    const context = useContext(UserContext);\r\n    const {state, dispatch} = useContext(UserContext);\r\n    //const {userToUpdate, userToUpdateKey} = state;\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [uploading, setIsUploading] = useState(false)\r\n    const [imageUrl, setImageUrl] = useState(null);\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n    \r\n    \r\n\r\n    const imagePicker = async e => {\r\n        try {\r\n            \r\n        const file = e.target.files[0];\r\n\r\n        var metaData = {\r\n            contentType: file.type\r\n        }\r\n\r\n        let resizedImage = await readAndCompressImage(file, imageConfig)\r\n\r\n        const storageRef =  await firebase.storage().ref()\r\n\r\n        var uploadTask = storageRef\r\n        .child(\"images/\" + v4())\r\n        .put(resizedImage, metaData)\r\n\r\n        uploadTask.on(\r\n            firebase.storage.TaskEvent.STATE_CHANGED,\r\n            snapshot => {\r\n                setIsUploading(true);\r\n                var progress = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n                \r\n                switch (snapshot.state) {\r\n                    case firebase.storage.TaskState.PAUSED:\r\n                        setIsUploading(false);\r\n                        console.log(\"Uploading Paused\")\r\n                        break;\r\n                    case firebase.storage.TaskState.RUNNING:\r\n                        console.log(\"Upload in progress..\");\r\n                        break;;\r\n                }\r\n                \r\n                \r\n                \r\n                if(progress === 100) {\r\n                    alert(\"Success Uploading Image\")\r\n                }\r\n            },\r\n            error => {\r\n                alert(\"Something went Wrong\")\r\n            },\r\n            () => {\r\n                uploadTask.snapshot.ref.getDownloadURL()\r\n                .then(imageUrl => {\r\n                    setImageUrl(imageUrl)\r\n                })\r\n                .catch(err => console.log(err))\r\n            }\r\n        )\r\n        \r\n\r\n        \r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n            alert(error);\r\n        }\r\n    }\r\n\r\n    const  handleSignup = () => {\r\n        firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        \r\n        .then( res => {\r\n            console.log(res)\r\n            context.setUser({email: res.user.email, uid: res.user.uid, image: imageUrl})\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignup()\r\n    }\r\n\r\n    // const addProfile = async () => {\r\n    //     try {\r\n    //         firebase.database()\r\n    //         .ref(\"Profile/\" + v4())\r\n    //         .set({\r\n    //             email,\r\n    //             picture: imageUrl\r\n    //         })\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n            \r\n    //     }\r\n    // }\r\n    // const googleSignIn = () => {\r\n    \r\n    //     var provider =  new firebase.auth.GoogleAuthProvider();\r\n\r\n    //     firebase.auth().signInWithPopup(provider)\r\n    //     .then((result) => {\r\n    //     context.setUser({uid: result.user.uid})\r\n\r\n    //     }).catch(error => {\r\n    //     console.log(error)\r\n    // })\r\n    // }\r\n    // //bug\r\n    // const facebookSignIn = () => {\r\n    //     var provider = new firebase.auth.FacebookAuthProvider();\r\n\r\n    //     firebase.auth().signInWithPopup(provider)\r\n    //     .then(result => {\r\n    //         context.setUser({uid: result.user.uid})\r\n    //     }).catch(\r\n    //         error => {\r\n    //             console.log(error)\r\n    //         }\r\n    //     )\r\n\r\n    // }\r\n\r\n    \r\n\r\n    if(context.user?.uid) {\r\n        return <Redirect to=\"/game-story\"/>\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"signup-page-title\">\r\n                <p>Sign Up</p>\r\n            </div>\r\n            <div className=\"image-container\">\r\n                <div className=\"void\"/>\r\n                <div className=\"photo\">\r\n                    \r\n                        <label className=\"image-label\" htmlFor=\"userImage\">\r\n                            <img src={imageUrl} alt=\"\" className=\"profu\" />\r\n                        </label>\r\n                        <input \r\n                        className=\"image-input\" \r\n                        id=\"userImage\" \r\n                        name=\"image\" \r\n                        multiple={false}\r\n                        onChange={e => imagePicker(e)}\r\n                        accept=\"image/*\" \r\n                        type=\"file\"></input>\r\n                   \r\n                </div>\r\n                <div className=\"void\"/>\r\n            </div>\r\n            <div className=\"container-box\">\r\n                {/* <div className=\"empyt-space\" /> */}\r\n                <Form onSubmit={handleSubmit} className=\"signup-form\">\r\n                    <FormGroup>\r\n                        <Label className=\"form-label\" for=\"userEmail\">Email:</Label>\r\n                        <Input \r\n                        className=\"form-input\" \r\n                        id=\"userEmail\" \r\n                        type=\"email\" \r\n                        value={email}\r\n                        onChange = {e => setEmail(e.target.value)}\r\n                        placeholder=\"johndoe@mail.com\"/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label className=\"form-label\" for=\"password\">Password:</Label>\r\n                        <Input \r\n                        className=\"form-input\" \r\n                        type=\"text\" \r\n                        id=\"password\" \r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        placeholder=\"donotuse123\"/>\r\n                    </FormGroup>\r\n                <div className=\"button-container\">\r\n                    <Button type=\"submit\" className=\"button-box\">\r\n                            <p className=\"button-text\">Sign Up</p>\r\n                    </Button>\r\n                </div>\r\n                </Form>\r\n                \r\n            </div>\r\n            {/* <p className=\"middle-text\">Or Sign In Using</p>    \r\n            <div className=\"other-methods\">\r\n                    <Button  onClick={googleSignIn} id=\"google\" className=\"button-box\"> \r\n                        <img className=\"auth-logo\" src={GImage} alt=\"Google\" />\r\n                    </Button>\r\n                    <Button onClick={facebookSignIn} className=\"button-box\" id=\"facebook\">\r\n                        <img className=\"auth-logo\" src={fbImage} alt=\"Facebook\" />\r\n                    </Button>\r\n                </div>   */}\r\n        </>\r\n\r\n    )\r\n    \r\n}\r\n\r\nexport default SignUp;","import React, { useContext, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Form, FormGroup, Label, Input, FormText } from 'reactstrap';\r\nimport '../App.css'\r\n\r\n\r\nimport firebase from 'firebase/app';\r\nimport { UserContext } from '../context/userContext';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\n\r\n\r\nconst SignIn = () => {\r\n\r\n    const context = useContext(UserContext);\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const  handleSignIn = () => {\r\n        firebase\r\n        .auth()\r\n        .signInWithEmailAndPassword(email, password)\r\n        .then( res => {\r\n            console.log(res)\r\n            context.setUser({email: res.user.email, uid: res.user.uid})\r\n        })\r\n        .catch(error => {\r\n            alert(error)\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        handleSignIn()\r\n    }\r\n\r\n    if(context.user?.uid) {\r\n        return <Redirect to=\"/game-story\"/>\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"signup-page-title\">\r\n                    <p>Sign In</p>\r\n                </div>\r\n                <div className=\"container-box\">\r\n                    <div className=\"empyt-space\" />\r\n                    <Form onSubmit={handleSubmit} className=\"signup-form\">\r\n                        <FormGroup>\r\n                            <Label className=\"form-label\" for=\"userEmail\">Email:</Label>\r\n                            <Input \r\n                            className=\"form-input\" \r\n                            id=\"userEmail\" \r\n                            type=\"email\" \r\n                            value={email}\r\n                            onChange={e => setEmail(e.target.value)}\r\n                            placeholder=\"youarenotshroud@mixer.com\"/>\r\n                        </FormGroup>\r\n                        <FormGroup>\r\n                            <Label className=\"form-label\" for=\"password\">Password:</Label>\r\n                            <Input \r\n                            className=\"form-input\" \r\n                            type=\"text\" \r\n                            value={password}\r\n                            onChange={e => setPassword(e.target.value)}\r\n                            id=\"password\" \r\n                            placeholder=\"shroudOP69\"/>\r\n                        </FormGroup>\r\n                    <div className=\"button-container\">\r\n                        <Button type=\"submit\" className=\"button-box\">\r\n                                <p className=\"button-text\">Sign In</p>\r\n                        </Button>\r\n                    </div>\r\n                    </Form>\r\n                </div>      \r\n        </>\r\n    )\r\n}\r\n\r\nexport default SignIn; ","import {createContext} from 'react';\r\n\r\nexport const GameContext = createContext();","import React, { useContext } from 'react';\r\nimport { GameContext } from '../context/gameContext';\r\nimport { useHistory } from 'react-router';\r\nimport { SET_SINGLE_GAME } from '../context/action.types';\r\n\r\nexport const GameCardComp = ({game, gameKey}) => {\r\n\r\n\r\n    const { dispatch } = useContext(GameContext);\r\n\r\n    const history = useHistory();\r\n\r\n    const viewSingleGame = game => {\r\n        dispatch({\r\n            type: SET_SINGLE_GAME,\r\n            payload: game,\r\n            key: gameKey\r\n        })\r\n\r\n        \r\n        history.push(\"/game-story/gameInfo\");\r\n    }\r\n    return(\r\n       <>\r\n        <div className=\"game-card\">\r\n            <div className=\"card-container\">\r\n            <img onClick={() => viewSingleGame(game)} className=\"game-card-image\" src={game.poster} alt=\"X\" />\r\n            <div onClick={() => viewSingleGame(game)} className=\"overlay\"><p className=\"game-card-text\">{game.title}</p></div>\r\n            </div>\r\n        </div>\r\n       </>\r\n    )\r\n}\r\n\r\n","export const SET_LOADING = \"SET_LOADING\";\r\nexport const SET_GAME = \"SET_GAME\";\r\nexport const GAME_UPDATE =\"GAME_UPDATE\";\r\nexport const SET_SINGLE_GAME = \"SET_SINGLE_GAME\";\r\nexport const SET_USER = \"SET_USER\";\r\nexport const USER_UPDATE =\"USER_UPDATE\";\r\nexport const SET_SINGLE_USER = \"SET_SINGLE_USER\";","import React, { useContext } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport DownArrow from '../assets/down-arrow.svg';\r\nimport firebase from \"firebase/app\";\r\nimport { GameContext } from '../context/gameContext';\r\nimport { useHistory } from 'react-router';\r\nimport { SET_SINGLE_GAME } from '../context/action.types';\r\nimport { ListGroup, ListGroupItem, Row, Container } from 'reactstrap';\r\nimport { GameCardComp } from \"../components/GameCard\";\r\nconst Home = () => {\r\n    \r\n    const {state, dispatch} = useContext(GameContext);\r\n    const {games} = state;\r\n\r\n    //const history = useHistory();\r\n\r\n    return(\r\n        <>\r\n            <Container>\r\n                {games.length === 0 ? (\r\n                    <>\r\n                    <div className=\"ring\">\r\n                        Loading \r\n                    </div> \r\n                    </>\r\n                ) : (\r\n                    <>\r\n                    <div className=\"latest-game\">\r\n                        <p className=\"latest-game-text\">Games</p>\r\n                        <img className=\"right-arrow\" src={DownArrow} alt=\"X\" />\r\n                    </div>\r\n                     <ul className=\"horizontal-list\">\r\n                     {Object.entries(games).map(([key, value]) => (\r\n                            <li key= {key}>\r\n                                <GameCardComp game = {value} gameKey = {key} />\r\n                            </li>\r\n                        ))}\r\n                     </ul>\r\n                    </>\r\n                )}\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\n\r\nconst pnF = () => {\r\n    return(\r\n        <div class=\"text middle\" data-text=\"Error 404\">\r\n            Error 404\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default pnF;","import React, { useContext, useState } from 'react';\r\nimport { GameContext } from '../context/gameContext';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { FormGroup, Form, Input, Label, Button } from 'reactstrap';\r\nimport firebase from 'firebase/app';\r\nimport { v4 } from 'uuid';\r\nimport Upvote from '../assets/upvote.svg'\r\nimport Reply from '../assets/reply.svg'\r\n\r\n\r\nconst GameInfo = () => {\r\n\r\n    const { state } = useContext(GameContext);\r\n    const {game} = state;\r\n    const {gameKey} = state;\r\n\r\n    const [comment, setComment] = useState('');\r\n    const [upvote, setUpvote] = useState('');\r\n\r\n    const addComment = async () => {\r\n        try{\r\n            firebase.database()\r\n            .ref(`games/${gameKey}/discussions/`)\r\n            .child(\"comments/\")\r\n            .set({\r\n                comment,\r\n                upvote\r\n            })\r\n        } catch(error) {\r\n            console.log(error)\r\n            alert(error)\r\n        }\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addComment();\r\n        alert(\"Success\");\r\n    }\r\n    \r\n\r\n    return(\r\n        <>\r\n            <div className=\"title-box\">\r\n                <p className=\"title-text\">{game?.title}</p>\r\n            </div>\r\n            <div className=\"t-i-box\">\r\n                <div className=\"trailor\">\r\n                <iframe className='trailor-frame' src={`https://www.youtube.com/embed/${game?.videoID}?autoplay=1&controls=0&enablejsapi=1&fs=0&loop=1&modestbranding=1&color=white&iv_load_policy=3&showinfo=0`} frameborder=\"0\" allow=\"accelerometer;  encrypted-media; gyroscope; picture-in-picture\"  allowfullscreen></iframe>\r\n                </div>\r\n                <div className=\"basic-info\">\r\n                    <div className=\"basic-form\">\r\n                        <p className=\"form-label\">Available On : <span className=\"answer\">{game?.available}</span> </p>\r\n                        <p className=\"form-label\">Developer : <span className=\"answer\">{game?.developer}</span> </p>\r\n                        <p className=\"form-label\">Released : <span className=\"answer\">{game?.release}</span> </p>\r\n                        <p className=\"form-label\">Genre : <span className=\"answer\">{game?.genre}</span> </p>\r\n                    </div>\r\n                </div>\r\n            </div> \r\n            <div className=\"main-box\">\r\n                <p className=\"form-label\">Storyline:</p>\r\n                <div className=\"story-out\">\r\n                    <p className=\"story-text\">{game?.storyline}</p> \r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"dis-box\">\r\n                <div className=\"dis-title\">\r\n                    <p>Discussions</p>\r\n                </div>\r\n\r\n                <div className=\"add-com-box\">\r\n                    <Form onSubmit={handleSubmit} className=\"add-com-form\">\r\n                        <FormGroup>\r\n                            <Label id=\"comment\" className=\"hidden\"></Label>\r\n                            <Input\r\n                                className=\"story-input\"\r\n                                value={comment}\r\n                                onChange={e => setComment(e.target.value)}\r\n                                type=\"textarea\"\r\n                                placeholder=\"Doesn't work right now...\"\r\n                            />\r\n                        </FormGroup>\r\n                        <Button type=\"submit\" className=\"sub-box\">\r\n                            <p className=\"button-text\">Submit</p>\r\n                        </Button>\r\n                    </Form>\r\n                    {/* <div className=\"Upvote\">\r\n                        <btn  className=\"upvote-btn\">\r\n                            <img className=\"int-icon\" src={Upvote} alt='Upvote'/>\r\n                        </btn>\r\n                        <span>56</span>\r\n                    </div>\r\n                    <div className=\"Reply\">\r\n                        <img className=\"int-icon\" src={Reply} alt='Reply'/>\r\n                         <btn className=\"reply-btn\">\r\n                             Reply\r\n                        </btn>\r\n                    </div> */}\r\n                </div>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\nexport default GameInfo;\r\n","/* eslint-disable react-hooks/rules-of-hooks */\r\nimport React, { useContext, useState, useEffect} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Form, FormGroup, Label, Input, Col, Button } from 'reactstrap';\r\nimport firebase from 'firebase/app'\r\n\r\nimport { readAndCompressImage } from 'browser-image-resizer'\r\nimport { imageConfig } from '../utils/config';\r\nimport { GameContext } from '../context/gameContext';\r\nimport { useHistory } from 'react-router';\r\nimport { v4 } from 'uuid';\r\nimport { GAME_UPDATE } from '../context/action.types';\r\n\r\n\r\nconst dashboard = () => {\r\n\r\n    const {state, dispatch} = useContext(GameContext);\r\n    const {gameToUpdate, gameToUpdateKey } = state;\r\n\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const history = useHistory();\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [available, setAvailable] = useState(\"\");\r\n    const [release, setRelease] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [developer, setDeveloper] = useState(\"\");\r\n    const [storyline, setStoryline] = useState(\"\");\r\n    const [videoID, setVideoID] = useState(\"\");\r\n    const [discussions, setDiscussions] = useState(\"\");\r\n    const [isUploading, setIsUploading] = useState(false);\r\n    const [downloadUrl, setDownloadUrl] = useState(null);\r\n    const [isUpdate, setIsUpdate] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (gameToUpdate) {\r\n          setTitle(gameToUpdate.title);\r\n          setAvailable(gameToUpdate.available);\r\n          setRelease(gameToUpdate.release);\r\n          setGenre(gameToUpdate.genre);\r\n          setDeveloper(gameToUpdate.developer);\r\n          setStoryline(gameToUpdate.storyline);\r\n          setVideoID(gameToUpdate.videoID);\r\n          setDownloadUrl(gameToUpdate.poster);\r\n    \r\n          // also setting is update to true to make the update action instead the addContact action\r\n          setIsUpdate(true);\r\n        }\r\n      }, [gameToUpdate]);\r\n\r\n      const imagePicker = async e => {\r\n          try{\r\n            const file = e.target.files[0];\r\n            \r\n            var metaData = {\r\n                contentType: file.type\r\n            }\r\n\r\n            let resizedImage = await readAndCompressImage(file, imageConfig);\r\n\r\n            const storageRef = await  firebase.storage().ref();\r\n            var uploadTask = storageRef\r\n            .child(\"posters/\" + v4())\r\n            .put(resizedImage, metaData)\r\n\r\n            uploadTask.on(\r\n                firebase.storage.TaskEvent.STATE_CHANGED,\r\n                snapshot => {\r\n                    setIsUploading(true);\r\n                    var progress = \r\n                    (snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED:\r\n                            setIsUploading(false);\r\n                            console.log(\"Uploading Paused\");\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING:\r\n                            console.log(\"Upload in progress...\")\r\n                            break;\r\n                    }\r\n                    if(progress === 100) {\r\n                        setIsUploading(false);\r\n                    }\r\n                }, error => {\r\n                    console.log(error)\r\n            }, () => {\r\n                uploadTask.snapshot.ref\r\n                .getDownloadURL()\r\n                .then(downloadURL => {\r\n                    setDownloadUrl(downloadURL)\r\n                })\r\n                .catch(error => console.error(error));\r\n                    \r\n                }\r\n            )\r\n\r\n\r\n        }catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const addGame = async () => {\r\n        try{\r\n            firebase\r\n            .database()\r\n            .ref(\"games/\" + v4())\r\n            .set({\r\n                title,\r\n                release,\r\n                available,\r\n                genre,\r\n                discussions,\r\n                storyline,\r\n                poster: downloadUrl,\r\n                developer,\r\n                videoID\r\n            });\r\n        } catch(error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addGame();\r\n        alert(\"Success\");\r\n    \r\n        dispatch({\r\n        type: GAME_UPDATE,\r\n        payload: null,\r\n        key: null\r\n        })\r\n        history.push(\"/game-story\");\r\n        }\r\n    return(\r\n        <>\r\n            <div className=\"heading\">\r\n                <h1 className=\"heading-text\">Add Game Information</h1>\r\n            </div>\r\n            <Form onSubmit={handleSubmit} className=\"title\">\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" sm={2} for=\"title\">Title:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    value={title} \r\n                    onChange={e => setTitle(e.target.value)} \r\n                    className=\"form-input\" \r\n                    type=\"text\" \r\n                    id=\"title\" />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" sm={2} for=\"poster\">Poster:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\" \r\n                    type=\"file\"\r\n                    multiple={false}\r\n                    onChange={e => imagePicker(e)}\r\n                    accept=\"image/*\"\r\n                    id=\"poster\" />\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" for=\"available\" sm={2}>Available:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\" \r\n                    type=\"select\" \r\n                    value={available}\r\n                    onChange={e => setAvailable(e.target.value)}\r\n                    id=\"available\">\r\n                    <option className=\"options\">PC</option>\r\n                    <option>PC + PS + Xbox</option>\r\n                    <option>PlayStation</option>\r\n                    <option>Xbox</option>\r\n                    <option>PS + Xbox</option>\r\n                    <option>PS + PC</option>\r\n                    <option>Nintendo</option>\r\n                    <option>PC + PS + Xbox + Nintendo</option>\r\n                    </Input>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" for=\"dev\" sm={2}>Developer:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\"\r\n                    value={developer}\r\n                    onChange={e => setDeveloper(e.target.value)} \r\n                    type=\"text\"  \r\n                    id=\"dev\"/>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" for=\"relDate\" sm={2}>Release:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\" \r\n                    value={release}\r\n                    onChange={e=> setRelease(e.target.value)}\r\n                    type=\"text\"\r\n                    placeholder=\"29th Feb 2056\" \r\n                    id=\"relDate\"/>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" for=\"genre\" sm={2}>Genre:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\" \r\n                    value={genre}\r\n                    onChange={e => setGenre(e.target.value)}\r\n                    type=\"text\" \r\n                    id=\"genre\">\r\n                    </Input>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup row>\r\n                    <Label className=\"form-label\" for=\"vidId\" sm={2}>Video ID:</Label>\r\n                    <Col sm={10}>\r\n                    <Input \r\n                    className=\"form-input\" \r\n                    value={videoID}\r\n                    onChange={e=> setVideoID(e.target.value)}\r\n                    type=\"text\" \r\n                    id=\"vidId\"/>\r\n                    </Col>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                        <Label className=\"form-label\" for=\"storyline\">Storyline:</Label>\r\n                        <Input \r\n                        type=\"textarea\" \r\n                        className=\"story-input\"\r\n                        value={storyline}\r\n                        onChange={e => setStoryline(e.target.value)} \r\n                        placeholder=\"Only copy-paste from Wikipedia, lol\" id=\"storyline\"/>\r\n                    </FormGroup>\r\n                    <Button type=\"submit\" className=\"button-box\">\r\n                        <p className=\"button-text\">Submit</p>\r\n                    </Button>\r\n                </Form>\r\n                    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default dashboard;","import { \r\n    SET_GAME, \r\n    SET_SINGLE_GAME, \r\n    SET_LOADING, \r\n    GAME_UPDATE } from \"./action.types\";\r\n\r\nexport default(state, action) => {\r\n    switch(action.type){\r\n        case SET_GAME:\r\n            return action.payload == null ? {...state, games: []} \r\n            : {...state, games: action.payload}\r\n        case SET_LOADING:\r\n            return {...state, isLoading: action.payload}\r\n        case GAME_UPDATE:\r\n            return {\r\n                ...state,\r\n                gameToUpdate: action.payload,\r\n                gameToUpdateKey: action.key\r\n            }\r\n        case SET_SINGLE_GAME: \r\n        return {\r\n            ...state,\r\n            game: action.payload,\r\n            gameKey: action.key \r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import React, { useState, useReducer, useEffect } from 'react';\nimport Footer from './layout/Footer';\nimport NavBar from './layout/Header';\nimport SignUp from './pages/SignUp';\nimport SignIn from './pages/SignIn';\nimport Home from './pages/Home';\nimport pnF from './pages/pnF';\nimport GameInfo from './pages/gameInfo';\n\n//react-router\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\n\n//firebase\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/storage\";\n\n//context api\nimport { UserContext } from './context/userContext';\nimport firebaseConfig from './config/firebaseConfig';\nimport dashboard from './pages/dashboard';\nimport { GameContext } from './context/gameContext';\nimport reducer from './context/reducer';\nimport { SET_SINGLE_GAME, SET_GAME, SET_LOADING, GAME_UPDATE } from './context/action.types';\nimport { Container } from 'reactstrap';\n\n\nconst initialState = {\n  games: [],\n  game: {},\n  gameToUpdate: null,\n  gameToUpdateKey: null,\n  isLoading: false\n}\n\n\n//init firebase\nfirebase.initializeApp(firebaseConfig); \n\nconst App = () => {\n  const [user, setUser] = useState(null);\n  \n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const getGames = async () => {\n    dispatch({\n      type: SET_LOADING,\n      payload: true\n    });\n\n  const getGamesRef = await firebase.database().ref(\"/games\");\n  getGamesRef.on(\"value\", snapshot => {\n    dispatch({\n      type: SET_GAME,\n      payload: snapshot.val()\n    })\n    dispatch({\n      type: SET_LOADING,\n      payload: false\n    })\n    \n  })\n}\n  useEffect(() => {\n    getGames();\n  }, [])\n  \n  \n  return(\n    <Router>\n    <UserContext.Provider value={{user, setUser}}>\n      <GameContext.Provider value={{state, dispatch}}>\n      <NavBar/>\n      <Container>\n      <Switch>\n        <Route exact path = \"/game-story\" component={Home}/>\n        <Route exact path = \"/game-story/signup\" component={SignUp}/>\n        <Route exact path = \"/game-story/signin\" component={SignIn}/>\n        <Route exact path = \"/game-story/dashboard\" component={dashboard}/>\n        <Route exact path = \"/game-story/gameInfo\" component={GameInfo}/>\n        <Route exact path = \"*\" component={pnF}/>\n      </Switch>\n      </Container>\n      <Footer/>\n      </GameContext.Provider>\n    </UserContext.Provider> \n    </Router>\n  )\n\n}\nexport default App;","export default {\r\n    apiKey: \"AIzaSyDFjRizP3pfwa-xIBIJNRiVm8TM9zq74G8\",\r\n    authDomain: \"gamestory-76bdd.firebaseapp.com\",\r\n    databaseURL: \"https://gamestory-76bdd.firebaseio.com\",\r\n    projectId: \"gamestory-76bdd\",\r\n    storageBucket: \"gamestory-76bdd.appspot.com\",\r\n    messagingSenderId: \"584449717844\",\r\n    appId: \"1:584449717844:web:2e6eaebd031a6683cc1fc1\",\r\n    measurementId: \"G-3E15VBQ82C\"\r\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}